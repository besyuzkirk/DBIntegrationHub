# Development ortamı için Docker Compose
# Kullanım: docker-compose -f docker-compose.dev.yml up

version: '3.8'

services:
  # PostgreSQL Veritabanı
  postgres:
    image: postgres:16-alpine
    container_name: dbintegrationhub-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: DBIntegrationHub
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - dbintegrationhub-network-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin - Database yönetim arayüzü
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: dbintegrationhub-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@dbintegrationhub.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - dbintegrationhub-network-dev
    volumes:
      - pgadmin_data:/var/lib/pgadmin

networks:
  dbintegrationhub-network-dev:
    driver: bridge

volumes:
  postgres_data_dev:
    driver: local
  pgadmin_data:
    driver: local

